<html>
<head>
<style type="text/css">
.card { 

height: 98px;
width: 73px;
background:url('cards.png') -1px 0; 
position: absolute;
z-index: -1;
}

#controls {
position: absolute;
z-index: 1;
}
</style>
</head>
<body>
<!-- <div id="cardz" class="card"></div> -->
<div id="controls">
<input type="text" id="col">
<input type="text" id="row">
<br>
<input type="text" id="toLeft">
<input type="text" id="toTop">
<button id="animateBtn">animate</button>
<br>
<button id="zIndexBtn">bring to front</button>
<button id="zIndexBtn2">send to back</button>
</div>
<script src="jquery.js"></script>
<script>
  var topZ = 52;


$("#animateBtn").click(function() {
  var toLeft = parseInt($("#toLeft").val());
  var toTop = parseInt($("#toTop").val());
  $("#cardz").animate({
    left:toLeft+'px',
    top:toTop+'px'});
});

$("#zIndexBtn").click(function() {
  $("#cardz").css('z-index', 2);
});

$("#zIndexBtn2").click(function() {
  $("#cardz").css('z-index', -1);
});

function suitFromValue(value) {
  var suits = ['C', 'H', 'S', 'D'];
  return suits[value % 4];
}

function rankFromValue(value) {
  var ranks = ['A', '2', '3', '4', '5', '6', '7', '9', 'T', 'J', 'Q', 'K', '8'];
  return ranks[Math.floor(value/4)];
}

function rowFromValue(value) {
  return value%4;
}

function colFromValue(value) {
  var cols = [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 7];
  return cols[Math.floor(value/4)];
}

function Card(value, x, y, h) {
  this.value = value;
  this.jid = "#card"+value;
  this.faceUp = true;
  this.x = x;
  this.y = y;

  this.hand = h;
  
  this.selected = false;
  this.suit = suitFromValue(value);
  this.rank = rankFromValue(value);
  this.col = colFromValue(value);
  this.row = rowFromValue(value);
  this.spriteX = 73*this.col + 1;
  this.spriteY = 98*this.row;
  this.face = "url('cards.png') -" + this.spriteX + "px -" + this.spriteY + "px";
  
  $('body').append('<div class="card" id="card'+value+'"></div>');
  $(this.jid).css('left', x);
  $(this.jid).css('top', y);
  $(this.jid).css('background', this.face);

  $(this.jid).data("selected", false);
  
  var cardObj = this;
  $(this.jid).click(function() {
    
    var pos = $(this).position();
    if (cardObj.selected) {
      cardObj.moveTo(pos.left, pos.top + 28, 100);
      cardObj.selected = false;
      cardObj.hand.removeFromSel(cardObj);
    }
    else {  // select the card
      cardObj.moveTo(pos.left, pos.top - 28, 100);
      cardObj.selected = true;
      cardObj.hand.addToSel(cardObj);
      
      //alert(cardObj.hand.getSel());
    }
  });
}

Card.prototype.moveTo = function(x, y, dur) {
  if (arguments.length == 2) {
    dur = 250;
  }
  $(this.jid).animate({ left: x+'px', top: y+'px'}, dur);
  this.x = x;
  this.y = y;
}
Card.prototype.zIndex = function(index) {
  $(this.jid).css('z-index', index);
}

function Hand(desc) {
  this.desc = desc;
  this.cards = [];
  this.selected = [];
}

Hand.prototype.addCard = function(c) {
  this.cards.push(c);
}

Hand.prototype.getCards = function() {
  var output = "";
  for (var i = 0; i < this.cards.length; i++) {
    output += this.cards[i].value + " ";
  }
  return output;
}
Hand.prototype.getSel = function() {
  var output = "";
  for (var i = 0; i < this.selected.length; i++) {
    output += this.selected[i].value + " ";
  }
  return output;
}
Hand.prototype.getDesc = function() {
  return this.desc;
}
Hand.prototype.addToSel = function(c) {
  this.selected.push(c);
}
Hand.prototype.removeFromSel = function(c) {
  var index = this.selected.indexOf(c);
  if (index != -1) {
    this.selected.splice(index, 1);
  }
}

//var cards = [];

//for(var i = 0; i < 52; i++) {
//  cards[i] = new Card(i, 5 + i*16, 200);
//  cards[i].zIndex(i);
//}

var deck = new Hand("the deck");
for (var i = 0; i < 52; i++) {
  c = new Card(i, 5 + i*16, 200, deck);
  c.zIndex(i);
  deck.addCard(c);
}


</script>
</body>
</html>
